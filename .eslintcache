[{"C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\index.tsx":"1","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\App.tsx":"2","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\pages\\TodoListPage.tsx":"3","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\todo-list\\index.tsx":"4","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\todo-list\\Header.tsx":"5","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\todo-list\\List.tsx":"6","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\todo-list\\Footer.tsx":"7","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\index.tsx":"8","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\theme\\index.tsx":"9"},{"size":193,"mtime":1608564790692,"results":"10","hashOfConfig":"11"},{"size":228,"mtime":1608573541162,"results":"12","hashOfConfig":"11"},{"size":131,"mtime":1608564793155,"results":"13","hashOfConfig":"11"},{"size":1196,"mtime":1608572131124,"results":"14","hashOfConfig":"11"},{"size":741,"mtime":1608572224707,"results":"15","hashOfConfig":"11"},{"size":965,"mtime":1608572398665,"results":"16","hashOfConfig":"11"},{"size":391,"mtime":1608572062863,"results":"17","hashOfConfig":"11"},{"size":96,"mtime":1608573492041,"results":"18","hashOfConfig":"11"},{"size":254,"mtime":1608573618026,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1te1r4a",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\App.tsx",[],"C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\pages\\TodoListPage.tsx",["42"],"import TodoList from '../components/todo-list'\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <TodoList />\r\n    </>\r\n  )\r\n}\r\n",["43","44"],"C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\todo-list\\index.tsx",["45"],"import styled from 'styled-components'\r\nimport { Flex } from '..'\r\nimport Footer from './Footer'\r\nimport Header, { HeaderProps } from './Header'\r\nimport List from './List'\r\n\r\nconst Title = styled.div`\r\n  background: -webkit-linear-gradient(-70deg, #a2facf, #64acff);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-size: 2em;\r\n  font-weight: 900;\r\n`\r\nconst Wrapper = styled(Flex)`\r\n  flex-direction: column;\r\n  margin: auto;\r\n  width: 30vw;\r\n  text-align: center;\r\n`\r\ninterface TodoPageProps extends HeaderProps {\r\n  title?: string\r\n}\r\nexport default (props: TodoPageProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>{props.title ?? 'Todo List'}</Title>\r\n      <Header selectIcon={props.selectIcon} textHint={props.textHint}></Header>\r\n      <List\r\n        items={[\r\n          {\r\n            isHover: false,\r\n            isEdit: false,\r\n            done: true,\r\n            uuid: '1',\r\n            text: '123123',\r\n          },\r\n          {\r\n            isHover: false,\r\n            isEdit: false,\r\n            done: false,\r\n            uuid: '1',\r\n            text: '31232131',\r\n          },\r\n        ]}\r\n      />\r\n      <Footer />\r\n    </Wrapper>\r\n  )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\todo-list\\Header.tsx",[],"C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\todo-list\\List.tsx",[],"C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\todo-list\\Footer.tsx",["46"],"import React, { FC } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '..'\r\n\r\ninterface FooterProps {}\r\nconst Footer: FC<FooterProps> = props => {\r\n  return (\r\n    <Flex>\r\n      <span> 7 items left</span>\r\n      <span>All</span>\r\n      <span>Active</span>\r\n      <span>Finished</span>\r\n      <span>Clear Finished</span>\r\n    </Flex>\r\n  )\r\n}\r\nexport default Footer\r\n","C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\components\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\react-hooks-typescript-todomvc\\src\\theme\\index.tsx",[],{"ruleId":"47","severity":1,"message":"48","line":3,"column":1,"nodeType":"49","endLine":9,"endColumn":2},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"47","severity":1,"message":"48","line":23,"column":1,"nodeType":"49","endLine":49,"endColumn":2},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":14},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]